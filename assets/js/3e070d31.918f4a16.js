"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[38741],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,m=u["".concat(i,".").concat(f)]||u[f]||p[f]||l;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=f;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},31513:function(e,t,n){n.r(t),n.d(t,{Badge:function(){return f},Bullet:function(){return u},SpecifiedBy:function(){return p},assets:function(){return c},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return d}});var r=n(83117),a=n(67294),l=n(3905);const o={id:"card-filters-input",title:"CardFiltersInput",hide_table_of_contents:!1},s=void 0,i={unversionedId:"api/inputs/card-filters-input",id:"api/inputs/card-filters-input",title:"CardFiltersInput",description:"Filters that can be applied when listing cards",source:"@site/docs/api/inputs/card-filters-input.mdx",sourceDirName:"api/inputs",slug:"/api/inputs/card-filters-input",permalink:"/docs/api/inputs/card-filters-input",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api/inputs/card-filters-input.mdx",tags:[],version:"current",frontMatter:{id:"card-filters-input",title:"CardFiltersInput",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"CardConfigWithGroupDeliveryInput",permalink:"/docs/api/inputs/card-config-with-group-delivery-input"},next:{title:"CardOrderByInput",permalink:"/docs/api/inputs/card-order-by-input"}},c={},d=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>CardFiltersInput.<b>status</b></code><Bullet /><code>CardStatus</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-cardfiltersinputbstatusbcodecardstatus-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardFiltersInput.<b>statuses</b></code><Bullet /><code>[CardStatus!]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-cardfiltersinputbstatusesbcodecardstatus--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardFiltersInput.<b>type</b></code><Bullet /><code>CardType</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-cardfiltersinputbtypebcodecardtype-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardFiltersInput.<b>types</b></code><Bullet /><code>[CardType!]</code> <Badge class="secondary" text="list"/> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-cardfiltersinputbtypesbcodecardtype--",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardFiltersInput.<b>search</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-cardfiltersinputbsearchbcodestring-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>CardFiltersInput.<b>accountId</b></code><Bullet /><code>String</code> <Badge class="secondary" text="scalar"/>',id:"code-style-fontweight-normal-cardfiltersinputbaccountidbcodestring-",level:4},{value:"Member of",id:"member-of",level:3}],u=()=>(0,l.kt)(a.Fragment,null,(0,l.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,l.kt)(a.Fragment,null,"Specification",(0,l.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),f=e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("span",{className:"badge badge--"+e.class},e.text)),m={toc:d,Bullet:u,SpecifiedBy:p,Badge:f},y="wrapper";function k(e){let{components:t,...n}=e;return(0,l.kt)(y,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Filters that can be applied when listing cards"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"input CardFiltersInput {\n  status: CardStatus\n  statuses: [CardStatus!]\n  type: CardType\n  types: [CardType!]\n  search: String\n  accountId: String\n}\n")),(0,l.kt)("h3",{id:"fields"},"Fields"),(0,l.kt)("h4",{id:"code-style-fontweight-normal-cardfiltersinputbstatusbcodecardstatus-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"CardFiltersInput.",(0,l.kt)("b",null,"status"))),(0,l.kt)(u,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/api/enums/card-status"},(0,l.kt)("inlineCode",{parentName:"a"},"CardStatus"))," ",(0,l.kt)(f,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The status of the card.")),(0,l.kt)("p",null,'@deprecated(reason: "use ',(0,l.kt)("inlineCode",{parentName:"p"},"statuses"),' instead")'),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-cardfiltersinputbstatusesbcodecardstatus--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"CardFiltersInput.",(0,l.kt)("b",null,"statuses"))),(0,l.kt)(u,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/api/enums/card-status"},(0,l.kt)("inlineCode",{parentName:"a"},"[CardStatus!]"))," ",(0,l.kt)(f,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,l.kt)(f,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Statuses of the card.")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-cardfiltersinputbtypebcodecardtype-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"CardFiltersInput.",(0,l.kt)("b",null,"type"))),(0,l.kt)(u,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/api/enums/card-type"},(0,l.kt)("inlineCode",{parentName:"a"},"CardType"))," ",(0,l.kt)(f,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Type of card")),(0,l.kt)("p",null,'@deprecated(reason: "use ',(0,l.kt)("inlineCode",{parentName:"p"},"types"),' instead")'),(0,l.kt)("blockquote",null),(0,l.kt)("h4",{id:"code-style-fontweight-normal-cardfiltersinputbtypesbcodecardtype--"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"CardFiltersInput.",(0,l.kt)("b",null,"types"))),(0,l.kt)(u,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/api/enums/card-type"},(0,l.kt)("inlineCode",{parentName:"a"},"[CardType!]"))," ",(0,l.kt)(f,{class:"secondary",text:"list",mdxType:"Badge"})," ",(0,l.kt)(f,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Types of card")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-cardfiltersinputbsearchbcodestring-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"CardFiltersInput.",(0,l.kt)("b",null,"search"))),(0,l.kt)(u,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/api/scalars/string"},(0,l.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,l.kt)(f,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"String searched")),(0,l.kt)("h4",{id:"code-style-fontweight-normal-cardfiltersinputbaccountidbcodestring-"},(0,l.kt)("a",{parentName:"h4",href:"#"},(0,l.kt)("code",{style:{fontWeight:"normal"}},"CardFiltersInput.",(0,l.kt)("b",null,"accountId"))),(0,l.kt)(u,{mdxType:"Bullet"}),(0,l.kt)("a",{parentName:"h4",href:"/api/scalars/string"},(0,l.kt)("inlineCode",{parentName:"a"},"String"))," ",(0,l.kt)(f,{class:"secondary",text:"scalar",mdxType:"Badge"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Account identifier")),(0,l.kt)("p",null,"This filter is only available for User Access Token, for the moment"),(0,l.kt)("blockquote",null),(0,l.kt)("h3",{id:"member-of"},"Member of"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/api/queries/cards"},(0,l.kt)("inlineCode",{parentName:"a"},"cards")),"  ",(0,l.kt)(f,{class:"secondary",text:"query",mdxType:"Badge"})))}k.isMDXComponent=!0}}]);