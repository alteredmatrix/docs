"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[9550],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=u(n),y=a,f=p["".concat(c,".").concat(y)]||p[y]||s[y]||o;return n?r.createElement(f,l(l({ref:t},d),{},{components:n})):r.createElement(f,l({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=y;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},57974:function(e,t,n){n.r(t),n.d(t,{Badge:function(){return y},Bullet:function(){return p},SpecifiedBy:function(){return s},assets:function(){return u},contentTitle:function(){return i},default:function(){return b},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var r=n(83117),a=n(67294),o=n(3905);const l={id:"card-type",title:"CardType",hide_table_of_contents:!1},i=void 0,c={unversionedId:"api/enums/card-type",id:"api/enums/card-type",title:"CardType",description:"Card Type",source:"@site/docs/api/enums/card-type.mdx",sourceDirName:"api/enums",slug:"/api/enums/card-type",permalink:"/docs/api/enums/card-type",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api/enums/card-type.mdx",tags:[],version:"current",frontMatter:{id:"card-type",title:"CardType",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"CardTransactionCategory",permalink:"/docs/api/enums/card-transaction-category"},next:{title:"CashAccountType",permalink:"/docs/api/enums/cash-account-type"}},u={},d=[{value:"Values",id:"values",level:3},{value:"<code style={{ fontWeight: 'normal' }}>CardType.<b>Virtual</b></code>",id:"code-style-fontweight-normal-cardtypebvirtualbcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>CardType.<b>VirtualAndPhysical</b></code>",id:"code-style-fontweight-normal-cardtypebvirtualandphysicalbcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>CardType.<b>SingleUseVirtual</b></code>",id:"code-style-fontweight-normal-cardtypebsingleusevirtualbcode",level:4},{value:"Member of",id:"member-of",level:3}],p=()=>(0,o.kt)(a.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,o.kt)(a.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),y=e=>(0,o.kt)(a.Fragment,null,(0,o.kt)("span",{className:"badge badge--"+e.class},e.text)),f={toc:d,Bullet:p,SpecifiedBy:s,Badge:y},m="wrapper";function b(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Card Type"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"enum CardType {\n  Virtual\n  VirtualAndPhysical\n  SingleUseVirtual\n}\n")),(0,o.kt)("h3",{id:"values"},"Values"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-cardtypebvirtualbcode"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"CardType.",(0,o.kt)("b",null,"Virtual")))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"When card is Virtual")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-cardtypebvirtualandphysicalbcode"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"CardType.",(0,o.kt)("b",null,"VirtualAndPhysical")))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"When card is Virtual and Physical")),(0,o.kt)("h4",{id:"code-style-fontweight-normal-cardtypebsingleusevirtualbcode"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"CardType.",(0,o.kt)("b",null,"SingleUseVirtual")))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"When card is Single Use Virtual")),(0,o.kt)("h3",{id:"member-of"},"Member of"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/api/objects/card"},(0,o.kt)("inlineCode",{parentName:"a"},"Card")),"  ",(0,o.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"}),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"p",href:"/api/inputs/card-filters-input"},(0,o.kt)("inlineCode",{parentName:"a"},"CardFiltersInput")),"  ",(0,o.kt)(y,{class:"secondary",text:"input",mdxType:"Badge"})))}b.isMDXComponent=!0}}]);