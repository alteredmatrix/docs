"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[66802],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=d(n),y=o,f=u["".concat(l,".").concat(y)]||u[y]||p[y]||c;return n?a.createElement(f,r(r({ref:t},s),{},{components:n})):a.createElement(f,r({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,r=new Array(c);r[0]=y;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:o,r[1]=i;for(var d=2;d<c;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},80540:function(e,t,n){n.r(t),n.d(t,{Badge:function(){return y},Bullet:function(){return u},SpecifiedBy:function(){return p},assets:function(){return d},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return r},metadata:function(){return l},toc:function(){return s}});var a=n(83117),o=n(67294),c=n(3905);const r={id:"cancel-physical-card-payload",title:"CancelPhysicalCardPayload",hide_table_of_contents:!1},i=void 0,l={unversionedId:"api/unions/cancel-physical-card-payload",id:"api/unions/cancel-physical-card-payload",title:"CancelPhysicalCardPayload",description:"No description",source:"@site/docs/api/unions/cancel-physical-card-payload.mdx",sourceDirName:"api/unions",slug:"/api/unions/cancel-physical-card-payload",permalink:"/docs/api/unions/cancel-physical-card-payload",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api/unions/cancel-physical-card-payload.mdx",tags:[],version:"current",frontMatter:{id:"cancel-physical-card-payload",title:"CancelPhysicalCardPayload",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"CancelFundingSourcePayload",permalink:"/docs/api/unions/cancel-funding-source-payload"},next:{title:"CancelStandingOrderPayload",permalink:"/docs/api/unions/cancel-standing-order-payload"}},d={},s=[{value:"Possible types",id:"possible-types",level:3},{value:'<code>CancelPhysicalCardSuccessPayload</code> <Badge class="secondary" text="object"/>',id:"cancelphysicalcardsuccesspayload-",level:4},{value:'<code>AccountMembershipNotAllowedRejection</code> <Badge class="secondary" text="object"/>',id:"accountmembershipnotallowedrejection-",level:4},{value:'<code>CardNotFoundRejection</code> <Badge class="secondary" text="object"/>',id:"cardnotfoundrejection-",level:4},{value:'<code>ForbiddenRejection</code> <Badge class="secondary" text="object"/>',id:"forbiddenrejection-",level:4},{value:'<code>PhysicalCardNotFoundRejection</code> <Badge class="secondary" text="object"/>',id:"physicalcardnotfoundrejection-",level:4},{value:"Returned by",id:"returned-by",level:3}],u=()=>(0,c.kt)(o.Fragment,null,(0,c.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,c.kt)(o.Fragment,null,"Specification",(0,c.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),y=e=>(0,c.kt)(o.Fragment,null,(0,c.kt)("span",{className:"badge badge--"+e.class},e.text)),f={toc:s,Bullet:u,SpecifiedBy:p,Badge:y},h="wrapper";function m(e){let{components:t,...n}=e;return(0,c.kt)(h,(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"No description"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-graphql"},"union CancelPhysicalCardPayload = CancelPhysicalCardSuccessPayload | AccountMembershipNotAllowedRejection | CardNotFoundRejection | ForbiddenRejection | PhysicalCardNotFoundRejection\n")),(0,c.kt)("h3",{id:"possible-types"},"Possible types"),(0,c.kt)("h4",{id:"cancelphysicalcardsuccesspayload-"},(0,c.kt)("a",{parentName:"h4",href:"/api/objects/cancel-physical-card-success-payload"},(0,c.kt)("inlineCode",{parentName:"a"},"CancelPhysicalCardSuccessPayload"))," ",(0,c.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null),(0,c.kt)("h4",{id:"accountmembershipnotallowedrejection-"},(0,c.kt)("a",{parentName:"h4",href:"/api/objects/account-membership-not-allowed-rejection"},(0,c.kt)("inlineCode",{parentName:"a"},"AccountMembershipNotAllowedRejection"))," ",(0,c.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Rejection returned when the Account Membership is not allowed to use an operation.")),(0,c.kt)("h4",{id:"cardnotfoundrejection-"},(0,c.kt)("a",{parentName:"h4",href:"/api/objects/card-not-found-rejection"},(0,c.kt)("inlineCode",{parentName:"a"},"CardNotFoundRejection"))," ",(0,c.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Rejection returned if the card was not found or if the user does not have the rights to know that the account exists")),(0,c.kt)("h4",{id:"forbiddenrejection-"},(0,c.kt)("a",{parentName:"h4",href:"/api/objects/forbidden-rejection"},(0,c.kt)("inlineCode",{parentName:"a"},"ForbiddenRejection"))," ",(0,c.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null),(0,c.kt)("h4",{id:"physicalcardnotfoundrejection-"},(0,c.kt)("a",{parentName:"h4",href:"/api/objects/physical-card-not-found-rejection"},(0,c.kt)("inlineCode",{parentName:"a"},"PhysicalCardNotFoundRejection"))," ",(0,c.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Rejection returned when the Physical Card does not exist")),(0,c.kt)("h3",{id:"returned-by"},"Returned by"),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/api/mutations/cancel-physical-card"},(0,c.kt)("inlineCode",{parentName:"a"},"cancelPhysicalCard")),"  ",(0,c.kt)(y,{class:"secondary",text:"mutation",mdxType:"Badge"})))}m.isMDXComponent=!0}}]);