"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[31543],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return y}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,y=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(y,c(c({ref:t},u),{},{components:n})):r.createElement(y,c({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:a,c[1]=o;for(var l=2;l<i;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},19550:function(e,t,n){n.r(t),n.d(t,{Badge:function(){return m},Bullet:function(){return p},SpecifiedBy:function(){return d},assets:function(){return l},contentTitle:function(){return o},default:function(){return b},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var r=n(83117),a=n(67294),i=n(3905);const c={id:"view-physical-card-numbers",title:"viewPhysicalCardNumbers",hide_table_of_contents:!1},o=void 0,s={unversionedId:"api/mutations/view-physical-card-numbers",id:"api/mutations/view-physical-card-numbers",title:"viewPhysicalCardNumbers",description:"Reveal the physical card numbers in the consent page once consent has been given by the cardholder",source:"@site/docs/api/mutations/view-physical-card-numbers.mdx",sourceDirName:"api/mutations",slug:"/api/mutations/view-physical-card-numbers",permalink:"/docs/api/mutations/view-physical-card-numbers",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api/mutations/view-physical-card-numbers.mdx",tags:[],version:"current",frontMatter:{id:"view-physical-card-numbers",title:"viewPhysicalCardNumbers",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"viewCardNumbers",permalink:"/docs/api/mutations/view-card-numbers"},next:{title:"viewPhysicalCardPin",permalink:"/docs/api/mutations/view-physical-card-pin"}},l={},u=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>viewPhysicalCardNumbers.<b>input</b></code><Bullet /><code>ViewPhysicalCardNumbersInput!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-viewphysicalcardnumbersbinputbcodeviewphysicalcardnumbersinput--",level:4},{value:"Type",id:"type",level:3},{value:'<code>ViewPhysicalCardNumbersPayload</code> <Badge class="secondary" text="union"/>',id:"viewphysicalcardnumberspayload-",level:4}],p=()=>(0,i.kt)(a.Fragment,null,(0,i.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),d=e=>(0,i.kt)(a.Fragment,null,"Specification",(0,i.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,i.kt)(a.Fragment,null,(0,i.kt)("span",{className:"badge badge--"+e.class},e.text)),y={toc:u,Bullet:p,SpecifiedBy:d,Badge:m},h="wrapper";function b(e){let{components:t,...n}=e;return(0,i.kt)(h,(0,r.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Reveal the physical card numbers in the consent page once consent has been given by the cardholder"),(0,i.kt)("p",null,"This mutation is restricted to an User access token (",(0,i.kt)("a",{parentName:"p",href:"https://docs.swan.io/api/authentication"},"Learn More"),") and ask the user to consent to this request."),(0,i.kt)("p",null,"The user must have the account membership for this card"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"viewPhysicalCardNumbers(\n  input: ViewPhysicalCardNumbersInput!\n): ViewPhysicalCardNumbersPayload!\n")),(0,i.kt)("h3",{id:"arguments"},"Arguments"),(0,i.kt)("h4",{id:"code-style-fontweight-normal-viewphysicalcardnumbersbinputbcodeviewphysicalcardnumbersinput--"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"viewPhysicalCardNumbers.",(0,i.kt)("b",null,"input"))),(0,i.kt)(p,{mdxType:"Bullet"}),(0,i.kt)("a",{parentName:"h4",href:"/api/inputs/view-physical-card-numbers-input"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewPhysicalCardNumbersInput!"))," ",(0,i.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,i.kt)(m,{class:"secondary",text:"input",mdxType:"Badge"})),(0,i.kt)("blockquote",null),(0,i.kt)("h3",{id:"type"},"Type"),(0,i.kt)("h4",{id:"viewphysicalcardnumberspayload-"},(0,i.kt)("a",{parentName:"h4",href:"/api/unions/view-physical-card-numbers-payload"},(0,i.kt)("inlineCode",{parentName:"a"},"ViewPhysicalCardNumbersPayload"))," ",(0,i.kt)(m,{class:"secondary",text:"union",mdxType:"Badge"})),(0,i.kt)("blockquote",null))}b.isMDXComponent=!0}}]);