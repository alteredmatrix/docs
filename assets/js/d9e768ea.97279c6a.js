"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[61070],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function d(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):d(d({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(r),f=a,m=p["".concat(l,".").concat(f)]||p[f]||s[f]||o;return r?n.createElement(m,d(d({ref:t},u),{},{components:r})):n.createElement(m,d({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,d=new Array(o);d[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:a,d[1]=i;for(var c=2;c<o;c++)d[c]=r[c];return n.createElement.apply(null,d)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},13946:function(e,t,r){r.r(t),r.d(t,{Badge:function(){return f},Bullet:function(){return p},SpecifiedBy:function(){return s},assets:function(){return c},contentTitle:function(){return i},default:function(){return b},frontMatter:function(){return d},metadata:function(){return l},toc:function(){return u}});var n=r(83117),a=r(67294),o=r(3905);const d={id:"card-order-by-field-input",title:"CardOrderByFieldInput",hide_table_of_contents:!1},i=void 0,l={unversionedId:"api/enums/card-order-by-field-input",id:"api/enums/card-order-by-field-input",title:"CardOrderByFieldInput",description:"Field we can use when ordering that can be applied when listing cards",source:"@site/docs/api/enums/card-order-by-field-input.mdx",sourceDirName:"api/enums",slug:"/api/enums/card-order-by-field-input",permalink:"/docs/api/enums/card-order-by-field-input",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api/enums/card-order-by-field-input.mdx",tags:[],version:"current",frontMatter:{id:"card-order-by-field-input",title:"CardOrderByFieldInput",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"CardDesignStatus",permalink:"/docs/api/enums/card-design-status"},next:{title:"CardProductStatus",permalink:"/docs/api/enums/card-product-status"}},c={},u=[{value:"Values",id:"values",level:3},{value:"<code style={{ fontWeight: 'normal' }}>CardOrderByFieldInput.<b>id</b></code>",id:"code-style-fontweight-normal-cardorderbyfieldinputbidbcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>CardOrderByFieldInput.<b>createdAt</b></code>",id:"code-style-fontweight-normal-cardorderbyfieldinputbcreatedatbcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>CardOrderByFieldInput.<b>updatedAt</b></code>",id:"code-style-fontweight-normal-cardorderbyfieldinputbupdatedatbcode",level:4},{value:"Member of",id:"member-of",level:3}],p=()=>(0,o.kt)(a.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,o.kt)(a.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),f=e=>(0,o.kt)(a.Fragment,null,(0,o.kt)("span",{className:"badge badge--"+e.class},e.text)),m={toc:u,Bullet:p,SpecifiedBy:s,Badge:f},y="wrapper";function b(e){let{components:t,...r}=e;return(0,o.kt)(y,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Field we can use when ordering that can be applied when listing cards"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"enum CardOrderByFieldInput {\n  id\n  createdAt\n  updatedAt\n}\n")),(0,o.kt)("h3",{id:"values"},"Values"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-cardorderbyfieldinputbidbcode"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"CardOrderByFieldInput.",(0,o.kt)("b",null,"id")))),(0,o.kt)("blockquote",null),(0,o.kt)("h4",{id:"code-style-fontweight-normal-cardorderbyfieldinputbcreatedatbcode"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"CardOrderByFieldInput.",(0,o.kt)("b",null,"createdAt")))),(0,o.kt)("blockquote",null),(0,o.kt)("h4",{id:"code-style-fontweight-normal-cardorderbyfieldinputbupdatedatbcode"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"CardOrderByFieldInput.",(0,o.kt)("b",null,"updatedAt")))),(0,o.kt)("blockquote",null),(0,o.kt)("h3",{id:"member-of"},"Member of"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/api/inputs/card-order-by-input"},(0,o.kt)("inlineCode",{parentName:"a"},"CardOrderByInput")),"  ",(0,o.kt)(f,{class:"secondary",text:"input",mdxType:"Badge"})))}b.isMDXComponent=!0}}]);