"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[50808],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,f=d["".concat(u,".").concat(m)]||d[m]||s[m]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c[d]="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},54122:function(e,t,n){n.r(t),n.d(t,{Badge:function(){return m},Bullet:function(){return d},SpecifiedBy:function(){return s},assets:function(){return l},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return p}});var r=n(83117),o=n(67294),i=n(3905);const a={id:"account-membership-order-by-field-input",title:"AccountMembershipOrderByFieldInput",hide_table_of_contents:!1},c=void 0,u={unversionedId:"api/enums/account-membership-order-by-field-input",id:"api/enums/account-membership-order-by-field-input",title:"AccountMembershipOrderByFieldInput",description:"Field we can use when ordering that can be applied when listing account memberships",source:"@site/docs/api/enums/account-membership-order-by-field-input.mdx",sourceDirName:"api/enums",slug:"/api/enums/account-membership-order-by-field-input",permalink:"/docs/api/enums/account-membership-order-by-field-input",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api/enums/account-membership-order-by-field-input.mdx",tags:[],version:"current",frontMatter:{id:"account-membership-order-by-field-input",title:"AccountMembershipOrderByFieldInput",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"AccountLanguage",permalink:"/docs/api/enums/account-language"},next:{title:"AccountMembershipStatus",permalink:"/docs/api/enums/account-membership-status"}},l={},p=[{value:"Values",id:"values",level:3},{value:"<code style={{ fontWeight: 'normal' }}>AccountMembershipOrderByFieldInput.<b>createdAt</b></code>",id:"code-style-fontweight-normal-accountmembershiporderbyfieldinputbcreatedatbcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>AccountMembershipOrderByFieldInput.<b>updatedAt</b></code>",id:"code-style-fontweight-normal-accountmembershiporderbyfieldinputbupdatedatbcode",level:4},{value:"Member of",id:"member-of",level:3}],d=()=>(0,i.kt)(o.Fragment,null,(0,i.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,i.kt)(o.Fragment,null,"Specification",(0,i.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,i.kt)(o.Fragment,null,(0,i.kt)("span",{className:"badge badge--"+e.class},e.text)),f={toc:p,Bullet:d,SpecifiedBy:s,Badge:m},b="wrapper";function y(e){let{components:t,...n}=e;return(0,i.kt)(b,(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Field we can use when ordering that can be applied when listing account memberships"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"enum AccountMembershipOrderByFieldInput {\n  createdAt\n  updatedAt\n}\n")),(0,i.kt)("h3",{id:"values"},"Values"),(0,i.kt)("h4",{id:"code-style-fontweight-normal-accountmembershiporderbyfieldinputbcreatedatbcode"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"AccountMembershipOrderByFieldInput.",(0,i.kt)("b",null,"createdAt")))),(0,i.kt)("blockquote",null),(0,i.kt)("h4",{id:"code-style-fontweight-normal-accountmembershiporderbyfieldinputbupdatedatbcode"},(0,i.kt)("a",{parentName:"h4",href:"#"},(0,i.kt)("code",{style:{fontWeight:"normal"}},"AccountMembershipOrderByFieldInput.",(0,i.kt)("b",null,"updatedAt")))),(0,i.kt)("blockquote",null),(0,i.kt)("h3",{id:"member-of"},"Member of"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/inputs/account-membership-order-by-input"},(0,i.kt)("inlineCode",{parentName:"a"},"AccountMembershipOrderByInput")),"  ",(0,i.kt)(m,{class:"secondary",text:"input",mdxType:"Badge"})))}y.isMDXComponent=!0}}]);