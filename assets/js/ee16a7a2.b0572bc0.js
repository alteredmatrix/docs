"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[78715],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=a.createContext({}),u=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},l=function(e){var t=u(e.components);return a.createElement(d.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,d=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),s=u(n),y=o,f=s["".concat(d,".").concat(y)]||s[y]||p[y]||c;return n?a.createElement(f,r(r({ref:t},l),{},{components:n})):a.createElement(f,r({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,r=new Array(c);r[0]=y;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[s]="string"==typeof e?e:o,r[1]=i;for(var u=2;u<c;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},46522:function(e,t,n){n.r(t),n.d(t,{Badge:function(){return y},Bullet:function(){return s},SpecifiedBy:function(){return p},assets:function(){return u},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return r},metadata:function(){return d},toc:function(){return l}});var a=n(83117),o=n(67294),c=n(3905);const r={id:"update-account-payload",title:"UpdateAccountPayload",hide_table_of_contents:!1},i=void 0,d={unversionedId:"api/unions/update-account-payload",id:"api/unions/update-account-payload",title:"UpdateAccountPayload",description:"No description",source:"@site/docs/api/unions/update-account-payload.mdx",sourceDirName:"api/unions",slug:"/api/unions/update-account-payload",permalink:"/docs/api/unions/update-account-payload",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api/unions/update-account-payload.mdx",tags:[],version:"current",frontMatter:{id:"update-account-payload",title:"UpdateAccountPayload",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"UpdateAccountMembershipPayload",permalink:"/docs/api/unions/update-account-membership-payload"},next:{title:"UpdateCardPayload",permalink:"/docs/api/unions/update-card-payload"}},u={},l=[{value:"Possible types",id:"possible-types",level:3},{value:'<code>UpdateAccountSuccessPayload</code> <Badge class="secondary" text="object"/>',id:"updateaccountsuccesspayload-",level:4},{value:'<code>AccountNotFoundRejection</code> <Badge class="secondary" text="object"/>',id:"accountnotfoundrejection-",level:4},{value:'<code>BadAccountStatusRejection</code> <Badge class="secondary" text="object"/>',id:"badaccountstatusrejection-",level:4},{value:'<code>ForbiddenRejection</code> <Badge class="secondary" text="object"/>',id:"forbiddenrejection-",level:4},{value:'<code>InternalErrorRejection</code> <Badge class="secondary" text="object"/>',id:"internalerrorrejection-",level:4},{value:'<code>ValidationRejection</code> <Badge class="secondary" text="object"/>',id:"validationrejection-",level:4},{value:"Returned by",id:"returned-by",level:3}],s=()=>(0,c.kt)(o.Fragment,null,(0,c.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,c.kt)(o.Fragment,null,"Specification",(0,c.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),y=e=>(0,c.kt)(o.Fragment,null,(0,c.kt)("span",{className:"badge badge--"+e.class},e.text)),f={toc:l,Bullet:s,SpecifiedBy:p,Badge:y},b="wrapper";function m(e){let{components:t,...n}=e;return(0,c.kt)(b,(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"No description"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-graphql"},"union UpdateAccountPayload = UpdateAccountSuccessPayload | AccountNotFoundRejection | BadAccountStatusRejection | ForbiddenRejection | InternalErrorRejection | ValidationRejection\n")),(0,c.kt)("h3",{id:"possible-types"},"Possible types"),(0,c.kt)("h4",{id:"updateaccountsuccesspayload-"},(0,c.kt)("a",{parentName:"h4",href:"/api/objects/update-account-success-payload"},(0,c.kt)("inlineCode",{parentName:"a"},"UpdateAccountSuccessPayload"))," ",(0,c.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null),(0,c.kt)("h4",{id:"accountnotfoundrejection-"},(0,c.kt)("a",{parentName:"h4",href:"/api/objects/account-not-found-rejection"},(0,c.kt)("inlineCode",{parentName:"a"},"AccountNotFoundRejection"))," ",(0,c.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Rejection returned if the account was not found or if the user does not have the rights to know that the card exists")),(0,c.kt)("h4",{id:"badaccountstatusrejection-"},(0,c.kt)("a",{parentName:"h4",href:"/api/objects/bad-account-status-rejection"},(0,c.kt)("inlineCode",{parentName:"a"},"BadAccountStatusRejection"))," ",(0,c.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Rejection returned if the status account is not valid")),(0,c.kt)("h4",{id:"forbiddenrejection-"},(0,c.kt)("a",{parentName:"h4",href:"/api/objects/forbidden-rejection"},(0,c.kt)("inlineCode",{parentName:"a"},"ForbiddenRejection"))," ",(0,c.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null),(0,c.kt)("h4",{id:"internalerrorrejection-"},(0,c.kt)("a",{parentName:"h4",href:"/api/objects/internal-error-rejection"},(0,c.kt)("inlineCode",{parentName:"a"},"InternalErrorRejection"))," ",(0,c.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Rejection returned on unexpected server error")),(0,c.kt)("h4",{id:"validationrejection-"},(0,c.kt)("a",{parentName:"h4",href:"/api/objects/validation-rejection"},(0,c.kt)("inlineCode",{parentName:"a"},"ValidationRejection"))," ",(0,c.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"Rejection returned if an input contains invalid data")),(0,c.kt)("h3",{id:"returned-by"},"Returned by"),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/api/mutations/update-account"},(0,c.kt)("inlineCode",{parentName:"a"},"updateAccount")),"  ",(0,c.kt)(y,{class:"secondary",text:"mutation",mdxType:"Badge"})))}m.isMDXComponent=!0}}]);