"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[12767],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return y}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=r.createContext({}),a=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},l=function(e){var n=a(e.components);return r.createElement(d.Provider,{value:n},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=a(t),f=i,y=p["".concat(d,".").concat(f)]||p[f]||s[f]||o;return t?r.createElement(y,u(u({ref:n},l),{},{components:t})):r.createElement(y,u({ref:n},l))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,u=new Array(o);u[0]=f;var c={};for(var d in n)hasOwnProperty.call(n,d)&&(c[d]=n[d]);c.originalType=e,c[p]="string"==typeof e?e:i,u[1]=c;for(var a=2;a<o;a++)u[a]=t[a];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},41518:function(e,n,t){t.r(n),t.d(n,{Badge:function(){return f},Bullet:function(){return p},SpecifiedBy:function(){return s},assets:function(){return a},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return l}});var r=t(83117),i=t(67294),o=t(3905);const u={id:"funding-source-order-by-input",title:"FundingSourceOrderByInput",hide_table_of_contents:!1},c=void 0,d={unversionedId:"api/inputs/funding-source-order-by-input",id:"api/inputs/funding-source-order-by-input",title:"FundingSourceOrderByInput",description:"Order that can be applied when listing funding source results",source:"@site/docs/api/inputs/funding-source-order-by-input.mdx",sourceDirName:"api/inputs",slug:"/api/inputs/funding-source-order-by-input",permalink:"/docs/api/inputs/funding-source-order-by-input",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api/inputs/funding-source-order-by-input.mdx",tags:[],version:"current",frontMatter:{id:"funding-source-order-by-input",title:"FundingSourceOrderByInput",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"FundingSourceFiltersInput",permalink:"/docs/api/inputs/funding-source-filters-input"},next:{title:"GenerateAccountStatementInput",permalink:"/docs/api/inputs/generate-account-statement-input"}},a={},l=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>FundingSourceOrderByInput.<b>field</b></code><Bullet /><code>FundingSourceOrderByFieldInput</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-fundingsourceorderbyinputbfieldbcodefundingsourceorderbyfieldinput-",level:4},{value:'<code style={{ fontWeight: \'normal\' }}>FundingSourceOrderByInput.<b>direction</b></code><Bullet /><code>OrderByDirection</code> <Badge class="secondary" text="enum"/>',id:"code-style-fontweight-normal-fundingsourceorderbyinputbdirectionbcodeorderbydirection-",level:4}],p=()=>(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,o.kt)(i.Fragment,null,"Specification",(0,o.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),f=e=>(0,o.kt)(i.Fragment,null,(0,o.kt)("span",{className:"badge badge--"+e.class},e.text)),y={toc:l,Bullet:p,SpecifiedBy:s,Badge:f},g="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(g,(0,r.Z)({},y,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Order that can be applied when listing funding source results"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"input FundingSourceOrderByInput {\n  field: FundingSourceOrderByFieldInput\n  direction: OrderByDirection\n}\n")),(0,o.kt)("h3",{id:"fields"},"Fields"),(0,o.kt)("h4",{id:"code-style-fontweight-normal-fundingsourceorderbyinputbfieldbcodefundingsourceorderbyfieldinput-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"FundingSourceOrderByInput.",(0,o.kt)("b",null,"field"))),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/api/enums/funding-source-order-by-field-input"},(0,o.kt)("inlineCode",{parentName:"a"},"FundingSourceOrderByFieldInput"))," ",(0,o.kt)(f,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null),(0,o.kt)("h4",{id:"code-style-fontweight-normal-fundingsourceorderbyinputbdirectionbcodeorderbydirection-"},(0,o.kt)("a",{parentName:"h4",href:"#"},(0,o.kt)("code",{style:{fontWeight:"normal"}},"FundingSourceOrderByInput.",(0,o.kt)("b",null,"direction"))),(0,o.kt)(p,{mdxType:"Bullet"}),(0,o.kt)("a",{parentName:"h4",href:"/api/enums/order-by-direction"},(0,o.kt)("inlineCode",{parentName:"a"},"OrderByDirection"))," ",(0,o.kt)(f,{class:"secondary",text:"enum",mdxType:"Badge"})),(0,o.kt)("blockquote",null))}m.isMDXComponent=!0}}]);