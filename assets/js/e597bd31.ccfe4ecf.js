"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[6854],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),y=i,h=d["".concat(l,".").concat(y)]||d[y]||u[y]||r;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=y;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:i,o[1]=c;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},65463:(e,t,n)=>{n.r(t),n.d(t,{Badge:()=>y,Bullet:()=>d,SpecifiedBy:()=>u,assets:()=>s,contentTitle:()=>c,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(83117),i=n(67294),r=n(3905);const o={id:"view-physical-card-pin",title:"viewPhysicalCardPin",hide_table_of_contents:!1},c=void 0,l={unversionedId:"api/mutations/view-physical-card-pin",id:"api/mutations/view-physical-card-pin",title:"viewPhysicalCardPin",description:"Reveal the PIN code on Swan app after his consent",source:"@site/docs/api/mutations/view-physical-card-pin.mdx",sourceDirName:"api/mutations",slug:"/api/mutations/view-physical-card-pin",permalink:"/docs/api/mutations/view-physical-card-pin",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api/mutations/view-physical-card-pin.mdx",tags:[],version:"current",frontMatter:{id:"view-physical-card-pin",title:"viewPhysicalCardPin",hide_table_of_contents:!1}},s={},p=[{value:"Arguments",id:"arguments",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>viewPhysicalCardPin.<b>input</b></code><Bullet /><code>ViewPhysicalCardPinInput!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="input"/>',id:"code-style-fontweight-normal-viewphysicalcardpinbinputbcodeviewphysicalcardpininput--",level:4},{value:"Type",id:"type",level:3},{value:'<code>ViewPhysicalCardPinPayload</code> <Badge class="secondary" text="union"/>',id:"viewphysicalcardpinpayload-",level:4}],d=()=>(0,r.kt)(i.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),u=e=>(0,r.kt)(i.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),y=e=>(0,r.kt)(i.Fragment,null,(0,r.kt)("span",{className:"badge badge--"+e.class},e.text)),h={toc:p,Bullet:d,SpecifiedBy:u,Badge:y},m="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Reveal the PIN code on Swan app after his consent"),(0,r.kt)("p",null,"This mutation is restricted to an User access token (",(0,r.kt)("a",{parentName:"p",href:"https://docs.swan.io/api/authentication"},"Learn More"),") and ask the user to consent to this request."),(0,r.kt)("p",null,"The user must have the account membership for this card"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"viewPhysicalCardPin(\n  input: ViewPhysicalCardPinInput!\n): ViewPhysicalCardPinPayload!\n")),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-viewphysicalcardpinbinputbcodeviewphysicalcardpininput--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"viewPhysicalCardPin.",(0,r.kt)("b",null,"input"))),(0,r.kt)(d,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/api/inputs/view-physical-card-pin-input"},(0,r.kt)("inlineCode",{parentName:"a"},"ViewPhysicalCardPinInput!"))," ",(0,r.kt)(y,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(y,{class:"secondary",text:"input",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h3",{id:"type"},"Type"),(0,r.kt)("h4",{id:"viewphysicalcardpinpayload-"},(0,r.kt)("a",{parentName:"h4",href:"/api/unions/view-physical-card-pin-payload"},(0,r.kt)("inlineCode",{parentName:"a"},"ViewPhysicalCardPinPayload"))," ",(0,r.kt)(y,{class:"secondary",text:"union",mdxType:"Badge"})),(0,r.kt)("blockquote",null))}f.isMDXComponent=!0}}]);