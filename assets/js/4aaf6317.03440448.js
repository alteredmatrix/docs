"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[69852],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(n),y=o,f=m["".concat(l,".").concat(y)]||m[y]||s[y]||a;return n?r.createElement(f,c(c({ref:t},p),{},{components:n})):r.createElement(f,c({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=y;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:o,c[1]=i;for(var u=2;u<a;u++)c[u]=n[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},74006:function(e,t,n){n.r(t),n.d(t,{Badge:function(){return y},Bullet:function(){return m},SpecifiedBy:function(){return s},assets:function(){return u},contentTitle:function(){return i},default:function(){return b},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var r=n(83117),o=n(67294),a=n(3905);const c={id:"payment-account-type",title:"PaymentAccountType",hide_table_of_contents:!1},i=void 0,l={unversionedId:"api/enums/payment-account-type",id:"api/enums/payment-account-type",title:"PaymentAccountType",description:"No description",source:"@site/docs/api/enums/payment-account-type.mdx",sourceDirName:"api/enums",slug:"/api/enums/payment-account-type",permalink:"/docs/api/enums/payment-account-type",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api/enums/payment-account-type.mdx",tags:[],version:"current",frontMatter:{id:"payment-account-type",title:"PaymentAccountType",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"PartnershipStatus",permalink:"/docs/api/enums/partnership-status"},next:{title:"PaymentLevel",permalink:"/docs/api/enums/payment-level"}},u={},p=[{value:"Values",id:"values",level:3},{value:"<code style={{ fontWeight: 'normal' }}>PaymentAccountType.<b>EMoney</b></code>",id:"code-style-fontweight-normal-paymentaccounttypebemoneybcode",level:4},{value:"<code style={{ fontWeight: 'normal' }}>PaymentAccountType.<b>PaymentService</b></code>",id:"code-style-fontweight-normal-paymentaccounttypebpaymentservicebcode",level:4},{value:"Member of",id:"member-of",level:3}],m=()=>(0,a.kt)(o.Fragment,null,(0,a.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),s=e=>(0,a.kt)(o.Fragment,null,"Specification",(0,a.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),y=e=>(0,a.kt)(o.Fragment,null,(0,a.kt)("span",{className:"badge badge--"+e.class},e.text)),f={toc:p,Bullet:m,SpecifiedBy:s,Badge:y},d="wrapper";function b(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"No description"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"enum PaymentAccountType {\n  EMoney\n  PaymentService\n}\n")),(0,a.kt)("h3",{id:"values"},"Values"),(0,a.kt)("h4",{id:"code-style-fontweight-normal-paymentaccounttypebemoneybcode"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"PaymentAccountType.",(0,a.kt)("b",null,"EMoney")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"When the account holder if the account hasn't met KYC requirements")),(0,a.kt)("h4",{id:"code-style-fontweight-normal-paymentaccounttypebpaymentservicebcode"},(0,a.kt)("a",{parentName:"h4",href:"#"},(0,a.kt)("code",{style:{fontWeight:"normal"}},"PaymentAccountType.",(0,a.kt)("b",null,"PaymentService")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"When all KYC requirements are met")),(0,a.kt)("h3",{id:"member-of"},"Member of"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/api/objects/account"},(0,a.kt)("inlineCode",{parentName:"a"},"Account")),"  ",(0,a.kt)(y,{class:"secondary",text:"object",mdxType:"Badge"})))}b.isMDXComponent=!0}}]);