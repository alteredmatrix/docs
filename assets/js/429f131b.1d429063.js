"use strict";(self.webpackChunk_swan_io_docs=self.webpackChunk_swan_io_docs||[]).push([[52352],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return b}});var c=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);t&&(c=c.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,c)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,c,a=function(e,t){if(null==e)return{};var n,c,a={},r=Object.keys(e);for(c=0;c<r.length;c++)n=r[c],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(c=0;c<r.length;c++)n=r[c],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=c.createContext({}),l=function(e){var t=c.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return c.createElement(i.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return c.createElement(c.Fragment,{},t)}},m=c.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,b=u["".concat(i,".").concat(m)]||u[m]||p[m]||r;return n?c.createElement(b,o(o({ref:t},d),{},{components:n})):c.createElement(b,o({ref:t},d))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return c.createElement.apply(null,o)}return c.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9090:function(e,t,n){n.r(t),n.d(t,{Badge:function(){return m},Bullet:function(){return u},SpecifiedBy:function(){return p},assets:function(){return l},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return d}});var c=n(83117),a=n(67294),r=n(3905);const o={id:"add-account-membership-success-payload",title:"AddAccountMembershipSuccessPayload",hide_table_of_contents:!1},s=void 0,i={unversionedId:"api/objects/add-account-membership-success-payload",id:"api/objects/add-account-membership-success-payload",title:"AddAccountMembershipSuccessPayload",description:"No description",source:"@site/docs/api/objects/add-account-membership-success-payload.mdx",sourceDirName:"api/objects",slug:"/api/objects/add-account-membership-success-payload",permalink:"/docs/api/objects/add-account-membership-success-payload",draft:!1,editUrl:"https://github.com/swan-io/docs/edit/main/docs/docs/api/objects/add-account-membership-success-payload.mdx",tags:[],version:"current",frontMatter:{id:"add-account-membership-success-payload",title:"AddAccountMembershipSuccessPayload",hide_table_of_contents:!1},sidebar:"schemaSidebar",previous:{title:"ActivatePhysicalCardSuccessPayload",permalink:"/docs/api/objects/activate-physical-card-success-payload"},next:{title:"AddAccountMembershipsSuccessPayload",permalink:"/docs/api/objects/add-account-memberships-success-payload"}},l={},d=[{value:"Fields",id:"fields",level:3},{value:'<code style={{ fontWeight: \'normal\' }}>AddAccountMembershipSuccessPayload.<b>accountMembership</b></code><Bullet /><code>AccountMembership!</code> <Badge class="secondary" text="non-null"/> <Badge class="secondary" text="object"/>',id:"code-style-fontweight-normal-addaccountmembershipsuccesspayloadbaccountmembershipbcodeaccountmembership--",level:4},{value:"Implemented by",id:"implemented-by",level:3}],u=()=>(0,r.kt)(a.Fragment,null,(0,r.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,r.kt)(a.Fragment,null,"Specification",(0,r.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,r.kt)(a.Fragment,null,(0,r.kt)("span",{className:"badge badge--"+e.class},e.text)),b={toc:d,Bullet:u,SpecifiedBy:p,Badge:m},y="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(y,(0,c.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"No description"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"type AddAccountMembershipSuccessPayload {\n  accountMembership: AccountMembership!\n}\n")),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("h4",{id:"code-style-fontweight-normal-addaccountmembershipsuccesspayloadbaccountmembershipbcodeaccountmembership--"},(0,r.kt)("a",{parentName:"h4",href:"#"},(0,r.kt)("code",{style:{fontWeight:"normal"}},"AddAccountMembershipSuccessPayload.",(0,r.kt)("b",null,"accountMembership"))),(0,r.kt)(u,{mdxType:"Bullet"}),(0,r.kt)("a",{parentName:"h4",href:"/api/objects/account-membership"},(0,r.kt)("inlineCode",{parentName:"a"},"AccountMembership!"))," ",(0,r.kt)(m,{class:"secondary",text:"non-null",mdxType:"Badge"})," ",(0,r.kt)(m,{class:"secondary",text:"object",mdxType:"Badge"})),(0,r.kt)("blockquote",null),(0,r.kt)("h3",{id:"implemented-by"},"Implemented by"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/unions/add-account-membership-payload"},(0,r.kt)("inlineCode",{parentName:"a"},"AddAccountMembershipPayload")),"  ",(0,r.kt)(m,{class:"secondary",text:"union",mdxType:"Badge"})))}f.isMDXComponent=!0}}]);